cmake_minimum_required(VERSION 3.0)
project(Game)
set(CMAKE_C_STANDARD 11)
set(EXECUTABLE_OUTPUT_PATH bin/${CMAKE_BUILD_TYPE})
set(COMMON_SOURCES socket.c socket.h)
set(SERVER_SOURCE_FILES server_main.c ${COMMON_SOURCES} server.c server.h)
set(CLIENT_SOURCE_FILES client_main.c ${COMMON_SOURCES} client.c client.h)
add_executable(bomberman_server ${SERVER_SOURCE_FILES})
add_executable(bomberman_client ${CLIENT_SOURCE_FILES})
if (DEFINED WIN32)
    set(WINDOWS_TARGET_COMMON_LINKS wsock32 ws2_32 winmm mingw32)
    target_link_libraries(bomberman_server ${WINDOWS_TARGET_COMMON_LINKS})
    target_link_libraries(bomberman_client ${WINDOWS_TARGET_COMMON_LINKS} SDL2main SDL2_image SDL2 winmm)
    set(CPACK_PACKAGE_INSTALL_DIRECTORY "bomberman")
    install(TARGETS bomberman_server DESTINATION .)
    install(TARGETS bomberman_client DESTINATION .)
    install(DIRECTORY sprites DESTINATION .)
    install(FILES map.txt DESTINATION .)
elseif (DEFINED UNIX)
    target_link_libraries(bomberman_client SDL2main SDL2_image SDL2)
    set(CPACK_GENERATOR "DEB")
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "libsdl2-dev,libsdl2-image-dev")
    install(TARGETS bomberman_server DESTINATION bin)
    install(TARGETS bomberman_client DESTINATION bin)
    install(DIRECTORY sprites DESTINATION share/bomberman)
    install(FILES map.txt DESTINATION share/bomberman)
endif ()
set(CPACK_PACKAGE_NAME "bomberman")
set(CPACK_RESOURCE_FILE_LICENSE ${PROJECT_SOURCE_DIR}/license.txt)
set(CPACK_PACKAGE_VENDOR "www.etna.io")
set(CPACK_PACKAGE_CONTACT "Etna Student")
set(CPACK_PACKAGE_VERSION "0.0.1")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "bomberman")
set(CPACK_PACKAGE_DESCRIPTION "bomberman en reseau")
include(CPack)
